# auto detects a good number of processes to run
worker_processes auto;

# traces usefull stuff such as signals received
error_log /dev/stderr notice;

# provides the configuration file context in which the directives that affect connection processing are specified
events {
    # sets the maximum number of simultaneous connections that can be opened by a worker process
    worker_connections 8000;
    # tells the worker to accept multiple connections at a time
    multi_accept on;
}

http {
    upstream my-backend {
        server nginx.weave.local:80; # adjust target server
    }

    upstream my-frontend {
        server nginx.weave.local:80; # adjust target server
    }

    server {
        #server_name *.myserver.net;
        listen 80;
        return 301 https://$host$request_uri;
    }

    server {
        # server_name *.myserver.net;
        listen 443 ssl;

        # see https://wiki.mozilla.org/Security/Server_Side_TLS
        ssl_prefer_server_ciphers on;
        ssl_certificate           /etc/nginx/cert.crt;
        ssl_certificate_key       /etc/nginx/cert.key;
        ssl_protocols TLSv1.2;
        ssl_ciphers HIGH:!aNULL:!eNULL:!EXPORT:!CAMELLIA:!DES:!MD5:!PSK:!RC4;
        #ssl_ciphers "ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256";

        location /api/ {
            proxy_pass http://my-backend;
            proxy_set_header Host            $host;
            proxy_set_header X-Forwarded-For $remote_addr;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }

        location / {
            proxy_pass http://my-frontend;
            proxy_set_header Host            $host;
            proxy_set_header X-Forwarded-For $remote_addr;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }
    }
}